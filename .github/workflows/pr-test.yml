name: CI - Build, Test, Analyze

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, develop, feature/* ]

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Clean TestResults folder
        run: rm -rf ${{ github.workspace }}/TestResults  # Clears old files

      - name: Run Tests with Coverage
        run: |
          echo "Running tests and generating coverage..."
          mkdir -p ${{ github.workspace }}/TestResults
          dotnet test --no-build --configuration Release \
           /p:CollectCoverage=true \
           /p:CoverletOutput=${{ github.workspace }}/TestResults/coverage.cobertura.xml \
           /p:CoverletOutputFormat=cobertura
          echo "=== TestResults Directory ==="
          ls -R ${{ github.workspace }}/TestResults

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Debug coverage file locations
        run: |
          echo "=== Searching for coverage.cobertura.xml files ==="
          find ${{ github.workspace }}/TestResults -type f -name "coverage.cobertura.xml" || true

      - name: Generate Coverage Summary
        run: |
          echo "Generating coverage summary..."
          reportgenerator -reports:${{ github.workspace }}/TestResults/**/coverage.cobertura.xml \
                         -targetdir:${{ github.workspace }}/TestResults/coverage-report \
                         -reporttypes:TextSummary
          echo "=== Summary ==="
          cat ${{ github.workspace }}/TestResults/coverage-report/Summary.txt

      - name: Run Static Analysis
        run: dotnet build -warnaserror

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ${{ github.workspace }}/TestResults/**/coverage-report
